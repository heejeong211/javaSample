cd ~/worspace

// 디렉토리 복사
cp -R HelloWorld RomanToNumber

// 작업(현재) 디렉토리 변경
cd RomanToNumber

// 파일 이름 변경
mv HelloWorld.java RomanToNumber.java

# VI 명령어 모드
화면 분활하기 : ctrl + w, v
화면 분활닫기 : ctrl + w, q
 
첫줄로 이동하기 : 명령입력줄에서 0:
마지막줄로 이동하기 : 명령입력줄에서 $

현재 컬럼 이하 잘라내기 : shift + d
현재 컬럼 단어 잘라내기 : dw

현재 줄 복사 : yy
현재 줄 포함 N줄 복사 : 숫자 N입력후, yy

현재 줄 잘라내기 : dd
현재 줄 포함 N줄 잘라내기 : 숫자 N입력후, dd

현재 줄 아래로 붙여 넣기 : p
현재 줄 위로 붙여 넣기 : shift + p

String(객체 타입, 원시 타입 아님) 비교하기 3가지
- 비교연산자 ==
  : 객체일 경우, 같은 객체를 레퍼런스하면 참(true), 아니라면 거짓(false)
    프리미티브 타입인 경우, 같은 값이면 참(true)
- equals (재정의 되면 결과가 달라질 수 있다.)
  : 같은 객체 이거나 또는, 같은 값을 가지고 있는 경우 참(true),
    이외는 거짓(false)
- compareTo (
  : 같은 문자열: 0,
   순서가 앞선 문자열: 음수,
   순서가 뒤인 문자열: 양수
 
String.toUpperCase
String.toLowerCase
        System.out.println("Roman number : " + roman);
        System.out.println("toLowerCase : " + roman.toLowerCase());
        System.out.println("toUpperCase : " + roman.toUpperCase());
        System.out.println("\"I\" == \"I\": " + ("I" == "I"));
        System.out.println("compareTo(\"I\"): " + roman.compareTo("I"));
        System.out.println("equals(\"I\"): " + roman.equals("I"));
        System.out.println("equalsIgnoreCase(\"I\"): " + roman.equalsIgnoreCase("I"));

        if (roman.equalsIgnoreCase("I")) {
            System.out.println("number 1");
        } else if (roman.equalsIgnoreCase("II")) {
            System.out.println("number 2");
        } else if (roman.equalsIgnoreCase("III")) {
            System.out.println("number 3");
        } else if (roman.equalsIgnoreCase("IV")) {
            System.out.println("number 4");
        } else if (roman.equalsIgnoreCase("V")) {
            System.out.println("number 5");
        } else if (roman.equalsIgnoreCase("VI")) {
            System.out.println("number 6");
        } else if (roman.equalsIgnoreCase("VII")) {
            System.out.println("number 7");
        } else if (roman.equalsIgnoreCase("VIII")) {
            System.out.println("number 8");
        } else if (roman.equalsIgnoreCase("IX")) {
            System.out.println("number 9");
        } else if (roman.equalsIgnoreCase("X")) {
            System.out.println("number 10");
        } else {
            System.out.println("Invalid roman number");
        }
        /*

# 널 객체 참조 예외
        try {
            Scanner sc = null;
            // sc is a null object.
            sc.next();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

Git 복사 하기 (https://github.com/goodexpert/JavaSample.git)
git clone https://github.com/goodexpert/JavaSample.git

#.gitignore 파일 생성 (저장소에 관리하지 않겠다고 선언된 파일들)
$ cd ~/workspace/JavaSample
$ vi .gitignore

$ git status

# 변경된 파일을 현재 브랜치에 하나씩 추가할 경우
$ git add .gitignore

# 변경된 모든 파일을 현재 브랜치에 추가할 경우
$ git add -A

# 변경된 내용을 저장소에 보관하며, 주석을 넣는다.
$ git commit -m "첫 커밋"

# 서버에 변경된 내용 푸쉬 하기
# origin의 주소는 .git/config 파일 안에 설정되어있다.
$ git push -u origin master

